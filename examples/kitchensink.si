    // This file showcases every single syntactic feature in the language.

fun array_add (a: Int[]): Int
{
    fun add (a: Int, b: Int): Int {
        return add2(a, b) // works!

        fun add2 (a: Int, b: Int): Int {
            return a + b
        }
    }

    if (a.length == 0)
        return 0

    var i: Int = 1
    var result: Int = a[0]

    while i < a.length {
        result = add(result, a[i])
        i = i + 1
    }

    return result
}

var total: Int = array_add([1, 2, 3])
var float_total: Float = total + 0.0

var math: Int = 1 + 3 * 4 * (1 + 3) / 12
validate5(math)
validate5(6) // some men just want to watch the world burn

fun validate5 (value: Int)
{
    if (value!= 5)
        print("We wanted 5 but got: " + value)

    if (value > 5)
        print("It was too big.")
    else if (value < 5)
        print("It was too small.")
    else
        print("It's just right.")
}

struct Pair {
    var a: Int
    var b: Int
}

var type: Type = Pair
print("" + type)

fun sum_pair (pair: Pair): Int {
    return pair.a + pair.b
}

fun debugPasFun (): Int {
     var x: Int = 1; return x
}

validate5(sum_pair($Pair(2, 3)))

fun use_array (array: Int[]) {}

var intVar1: Int = 3
var intVar2: Int = 5
var intVar3: Int = intVar1 + intVar2
print("intVar3 : " + intVar3)

var intArray: Int[] = [1, 2, 7]
var intArray1: Int[] = [8, 5, 7]
var intArray2: Int[] = []
var result: Int = intArray[0]
print("intArray[0] = " + result)
var c: Float[] = [3.2, -1.3658, 0.0] / [0.0, 1.753, -1.654]
print("c[0] = " + c[0])
print("c[1] = " + c[1])
print("c[2] = " + c[2])
use_array([])

print("the x in question : " + debugPasFun())