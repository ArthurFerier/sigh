var threadedVar: Int = 0

var i: Int = 0
fun add1000(): Int {
        while  threadedVar < 100000 {
            protect : {
                i = i + 1
            }
            if (threadedVar < 100000) {
                threadedVar = threadedVar + 1
            }
        }
        return 1
}

var threadedVar2: Int = 0
var i2: Int = 0
fun add1000NoProtect(): Int {
        while  i2 < 100000 {
                threadedVar2 = threadedVar2 + 1
                i2 = i2 + 1
        }
        return 1
}

launch var protect1: Int = add1000()
launch var protect2 : Int = add1000()
launch var protect3 : Int = add1000()
launch var protect4 : Int = add1000()

wait(protect1)
wait(protect2)
wait(protect3)
wait(protect4)

launch var noProtect : Int = add1000NoProtect()
launch var noProtect1 : Int = add1000NoProtect()
launch var noProtect2 : Int = add1000NoProtect()
launch var noProtect3 : Int = add1000NoProtect()

wait(noProtect)
wait(noProtect1)
wait(noProtect2)
wait(noProtect3)

print("ThreadedVar : " + threadedVar)
print("ThreadedVar2 : " + threadedVar2)

